[output_settings]
outdir = {{ production.rundir }}
label = {{ production.name }}
logging_level = INFO 

[run_settings]
local = False
injection = False
submit = False 

[condor_settings]
request_cpus = 16
request_memory = 12 GB
request_disk = 5 GB 
accounting_group = {{ config['pipelines']['accounting'] }}

[analysis_lens_generation_settings]
lensing_module = gravelamps.lensing.interpolator
interpolator_model = {{ production.lens_model }}

minimum_dimensionless_frequency = {{ production.meta['minimum_dimensionless_frequency'] }} 
maximum_dimensionless_frequency = {{ production.meta['maximum_dimensionelss_frequency'] }}
length_dimensionless_frequency = {{ production.meta['length_dimensionless_frequency'] }}

minimum_source_position = {{ production.meta['minimum_source_position'] }}
maximum_source_position = {{ production.meta['maximum_source_position'] }}
length_source_position = {{ production.meta['length_source_position'] }}

arithmetic_precision = {{ production.meta['precision'] }}
geometric_optics_frequency = {{ production.meta['geometric_optics_frequency'] }}
sis_summation_upper_limit = {{ production.meta['sis_limit'] }}

dimensionless_frequency_file = {{ production.meta['dimensionless_frequency_file'] }}
source_position_file = {{ production.meta['source_position_file'] }}
amplification_factor_real_file = {{ production.meta['amplification_factor_real_file'] }}
amplification_factor_imag_file = {{ production.meta['amplification_factor_imag_file'] }} 

[inference_settings]
detectors = {{ production.meta['interferometers'] }}
duration = {{ production.meta['quality']['segment-length'] }}
sampling_frequency = {{ production.meta['quality']['sample-rate'] }}
trigger_time = {{ production.meta['event time'] }}
sampler = dynesty
prior-file = ./{{ production.name }}.prior
waveform-generator = gravelamps.lensing.waveform_generator.LensedWaveformGenerator
sampler-kwargs={'nlive': 2000, 'sample': 'rwalk', 'walks': 100, 'nact': 50, 'check_point_delta_t':1800, 'check_point_plot':True}

waveform_approximant = {{ production.meta['approximant'] }}
reference_frequency = {{ production.meta['quality']['reference-frequency'] }}
minimum-frequency={ {% if production.meta['interferometers'] contains "H1" %}'H1': {{ production.quality['lower-frequency']['H1'] }},{% endif %} {% if production.meta['interferometers'] contains "L1" %}'L1': {{ production.quality['lower-frequency']['L1']}},{% endif %} {% if production.meta['interferometers'] contains "V1" %} 'V1': {{ production.quality['lower-frequency']['V1']}} {% endif %} }
maximum-frequency={ {% if production.meta['interferometers'] contains "H1" %}'H1': {{ production.meta['quality']['high-frequency'] }},{% endif %} {% if production.meta['interferometers'] contains "L1" %}'L1': {{ production.meta['quality']['high-frequency'] }},{% endif %} {% if production.meta['interferometers'] contains "V1" %} 'V1': {{ production.meta['quality']['high-frequency'] }} {% endif %} }

[bilby_pipe_additioanl_settings]
calibration-model=CubicSpline
11
spline-calibration-envelope-dict={ {% if production.meta['interferometers'] contains "H1" %}H1:{{ repo_dir }}/{{ production.meta['calibration']['H1'] }},{% endif %}{% if production.meta['interferometers'] contains "L1" %}L1:{{ repo_dir }}/{{ production.meta['calibration']['L1'] }},{% endif %}{% if production.meta['interferometers'] contains "V1" %}V1:{{ repo_dir }}/{{ production.meta['calibration']['V1'] }}{% endif %} }
12
spline-calibration-nodes=10
channel-dict={ {% if production.meta['interferometers'] contains "H1" %}{{ production.meta['data']['channels']['H1'] }},{% endif %} {% if production.meta['interferometers'] contains "L1" %}{{ production.meta['data']['channels']['L1'] }},{% endif %}{% if production.meta['interferometers'] contains "V1" %}{{ production.meta['data']['channels']['V1'] }}{% endif %} }
psd-dict={ {% if production.meta['interferometers'] contains "H1" %}H1:{{ production.psds['H1'] }},{% endif %} {% if production.meta['interferometers'] contains "L1" %}L1:{{ production.psds['L1'] }},{% endif %} {% if production.meta['interferometers'] contains "V1" %}V1:{{ production.psds['V1'] }}{% endif %} }
psd-fractional-overlap=0.5
post-trigger-duration=2.0
psd-length={{ production.meta['quality']['psd-length'] | round }}
45
psd-maximum-duration=1024
